{"version":3,"sources":["scripts/main.js"],"names":["burger","document","querySelector","navbar","transformHandler","classList","toggle","addEventListener","clickOnItemHandler","e","item","target","closest","contains","remove","$","ready","slick","prevArrow","nextArrow","slidesToShow","infinite","variableWidth","responsive","breakpoint","settings","buttonPositionHandler","getScrollbarWidth","scrollbarWidth","div","createElement","style","overflowY","width","height","body","append","scrollWidth","offsetWidth","clientWidth","container","right","window","innerWidth","scrollFromTop","scrollTop","pageYOffset","documentElement","buttonTop","innerHeight","opacity","calculateNavbarPadding","paddingLeft","setNavbarTopPosition","navbarList","header","listItem","headerHeight","clientHeight","headerPositionTop","parseInt","getComputedStyle","getPropertyValue","listItemHeight","paddingTop","setFirstScreenHeight","textBlock","screen","headerCoords","getBoundingClientRect","bottom","textBlockCoords","top","marginTop"],"mappings":"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","file":"main.6841aceb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n/* eslint-env jquery */\n\nconst burger = document.querySelector('.burger');\nconst navbar = document.querySelector('.navbar');\n\nconst transformHandler = () => {\n  burger.classList.toggle('burger--active');\n  navbar.classList.toggle('page__navbar-upper--active');\n};\n\nburger.addEventListener('click', transformHandler);\n\nconst clickOnItemHandler = (e) => {\n  const item = e.target.closest('.navbar__item');\n\n  if (!item || !navbar.contains(item)) {\n    return;\n  }\n  navbar.classList.remove('page__navbar-upper--active');\n  burger.classList.remove('burger--active');\n};\n\nnavbar.addEventListener('click', clickOnItemHandler);\n\n$(document).ready(function(){\n  $('.slider__wrapper').slick({\n    prevArrow: '.slider__control-prev',\n    nextArrow: '.slider__control-next',\n    slidesToShow: 3,\n    infinite: true,\n    variableWidth: true,\n    responsive: [\n      {\n        breakpoint: 1200, \n        settings: {\n          slidesToShow: 2,\n        }\n      }, \n      {\n        breakpoint: 700, \n        settings: {\n          slidesToShow: 1,\n        }\n      }\n    ]\n  });\n});\nconst buttonPositionHandler = () => {\n  const getScrollbarWidth = () => {\n    const div = document.createElement('div');\n    div.style.overflowY = 'scroll';\n    div.style.width = '50px';\n    div.style.height = '50px';\n    document.body.append(div);\n\n    const scrollWidth = div.offsetWidth - div.clientWidth;\n\n    div.remove();\n\n    return scrollWidth;\n  };\n  const scrollbarWidth = getScrollbarWidth();\n  const container = document.querySelector('.container');\n  const buttonTop = document.querySelector('.button-top');\n\n  buttonTop.style.right = `${(\n    window.innerWidth - container.clientWidth\n  ) / 2 - scrollbarWidth}px`;\n};\n\nbuttonPositionHandler();\n\nwindow.addEventListener('resize', buttonPositionHandler);\n\nconst scrollFromTop = () => {\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  const buttonTop = document.querySelector('.button-top');\n\n  if (scrollTop > window.innerHeight / 2) {\n    buttonTop.style.opacity = 1;\n  } else {\n    buttonTop.style.opacity = 0;\n  }\n};\n\nwindow.addEventListener('scroll', scrollFromTop);\n\nconst calculateNavbarPadding = () => {\n  if (window.innerWidth < 1024) {\n    const navbar = document.querySelector('.navbar');\n    const container = document.querySelector('.container');\n    navbar.style.paddingLeft = `${(\n      window.innerWidth - container.clientWidth\n    ) / 2}px`;\n  }\n  \n};\n\ncalculateNavbarPadding();\n\nwindow.addEventListener('resize', calculateNavbarPadding);\n\nconst setNavbarTopPosition = () => {\n  const navbarList = document.querySelector('.navbar__list');\n  const header = document.querySelector('.page__header-upper');\n  const listItem = document.querySelector('.navbar__item');\n\n  const headerHeight = header.clientHeight;\n  const headerPositionTop = parseInt(window.getComputedStyle(header).getPropertyValue('top'));\n  const listItemHeight = listItem.clientHeight;\n\n  if(window.innerWidth <= 700) {\n    navbarList.style.paddingTop = `${headerHeight + headerPositionTop + listItemHeight / 2}px`;\n  } else if (window.innerWidth > 700 && window.innerWidth <= 1023){\n    navbarList.style.paddingTop = `${headerPositionTop * 2}px`;\n  } else {\n    navbarList.style.paddingTop = `initial`;\n  }\n}\n\nsetNavbarTopPosition();\n\nwindow.addEventListener('resize', setNavbarTopPosition);\n\nconst setFirstScreenHeight = () => {\n  const header = document.querySelector('.header');\n  const textBlock = document.querySelector('.home__text-block');\n  const screen = document.querySelector('.home');\n\n  if (window.innerHeight >= screen.clientHeight) {\n      screen.style.height = `100vh`;\n  } \n\n  const headerCoords = header.getBoundingClientRect().bottom + window.pageYOffset;\n  const textBlockCoords = textBlock.getBoundingClientRect().top + window.pageYOffset;\n\n  if (headerCoords > textBlockCoords) {\n    textBlock.style.marginTop = `${header.clientHeight + (headerCoords - textBlockCoords) + 30}px`\n  }\n}\n\nsetFirstScreenHeight();\nwindow.addEventListener('resize', setFirstScreenHeight);\n"]}